# -*- coding: utf-8 -*-
"""password_encryptor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q7ICbyNVkgqSAONMpHuGnS_lpGnycRt7
"""

!pip install cryptography 
from cryptography.fernet import Fernet 

# we use the following function only once to generate a key and encrypting data
#def write_key():
#   key = Fernet.generate_key()
#   with open ("key.key", "wb") as key_file:
#     key_file.write(key)

# write_key()


def load_key():
#for decrypting data 
  file = open("key.key","rb")
  key  = file.read()
  file.close()
  return key


master_pwd = input("Type in your master password to list or add passwords: ")

if master_pwd != "mymaster_password":
  situation ="stop"
  print("incorrect password")
else:
  situation = "continue"
  
     

#our encryptor is the key generated by Fernet plus our master password
key = load_key() #.encode just turns it into bytes
fer = Fernet(key)


def view():
  with open ("passwords.txt","r") as f:
    for line in f.readlines():
      data = line.rstrip()
      user, psword = data.split("|")
      print("Username: ", user, "| Password: ", 
            fer.decrypt(psword.encode()).decode())

def add():
  name = input("Enter username: ")
  pwd = input("Enter password: ")

  with open("passwords.txt","a") as f:
    #we want to store our passwords encrypted
    #therefore we use fer.encrypt()
    f.write(name + "|" + fer.encrypt(pwd.encode()).decode() + "\n") 


while situation == "continue": 
  mode = input ("Add new password or view passwords? (view, add), press q to quit: ").lower()
  if mode == "q":
    break

  if mode == "view":
    view()
  elif mode == "add": 
    add(),

  else: 
    print("Invalid mode")
    continue